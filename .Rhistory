shiny::runApp()
knitr::opts_chunk$set(echo = TRUE, fig.width=7, fig.height=5, fig.align = "center")
library(maps)
library(shiny)
library(tidyverse)
library(forcats)
# import data
data<-read.csv("https://raw.github.ubc.ca/ubc-mds-2017/DSCI_532_milestone1_qyue2014/master/data/marshall/ucr_crime_1975_2015.csv?token=AAADszx30g6sUEv5VEhvsCn44iJBnQOaks5ablAWwA%3D%3D")
# exclude data I do not want
# I need ORI, year, department_name, and normalized crime data
data<-data[c(-4,-5,-6,-7,-8,-9,-16,-17)]
# remove Nas
data<-na.omit(data)
# To keep consistency, I remove incomplete records that did not report crime for all 12 months
# in a given year
data<-filter(data,months_reported==12)
data$ORI<-as.character(data$ORI)
data$state<-sapply(data$ORI,function(x) stri_sub(x,from = 1,to=2))
data$state<-factor(data$state)
library(stringi)
# Again, exclude features that I do not want: months_reported
data<-data[-4]
# check what is "NB"
# filter(data, state=="NB") # By checking with website, I find that the "NB" is actually "NE"
data$state <- as.character(data$state)
data$state[data$state == "NB"] <- "NE"
data$state <- factor(data$state)
crime<-data
# get data to make the map
library(maps)
map_usa<-map_data("state")
usa_states<-map_data("state")
usa_states<-usa_states[-6]
# need to reset wd here
sabbr<-read.csv("https://raw.githubusercontent.com/TinaQian2017/Milestone_532_new/master/data/states_abbr.csv",header = T)
sabbr$region<-as.character(sabbr$region)
mapindex<-left_join(usa_states,sabbr)
mapdata<-full_join(mapindex,data)
# change headers
names(mapdata)[11:14]<-c('Homicides', 'Rape', 'Robbery', 'Aggravated_Assault')
names(crime)[5:8]<-c('Homicides', 'Rape', 'Robbery', 'Aggravated_Assault')
ggplot()+
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),fill="grey") +
labs(x="Longitude",y="Latitude")
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),fill="grey") +
labs(x="Longitude",y="Latitude")
View(data)
View(mapdata)
runApp()
runApp()
runApp()
runApp()
runApp()
c<-c()
c is NA
is.na(x)
is.na(c)
is.null(c)
runApp()
runApp()
runApp()
View(mapdata)
runApp()
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),alpha=0.7) +
geom_text(data = mapdata,aes(label=state,x=mean(lat),y=mean(long)))+
labs(x="Longitude",y="Latitude")+
theme_bw()
View(map_usa)
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),alpha=0.7) +
geom_text(data = map_usa,aes(label=region,x=mean(lat),y=mean(long)))+
labs(x="Longitude",y="Latitude")+
theme_bw()
mapdata %>% group_by(state) %>% summarise(x=mean(lat),y=mean(long))
label<-mapdata %>% group_by(state) %>% summarise(x=mean(lat),y=mean(long))
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),alpha=0.7) +
geom_text(data = label,aes(label=state,x=mean(lat),y=mean(long)))+
labs(x="Longitude",y="Latitude")+
theme_bw()
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),alpha=0.7) +
geom_text(data = label,aes(label=state,x=x,y=y))+
labs(x="Longitude",y="Latitude")+
theme_bw()
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),alpha=0.7) +
# geom_text(data = label,aes(label=state,x=x,y=y))+
labs(x="Longitude",y="Latitude")+
theme_bw()
View(label)
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),alpha=0.7) +
geom_text(data = label,aes(label=state,x=x,y=y))+
coord_equal() +
labs(x="Longitude",y="Latitude")+
theme_bw()
runApp()
runApp()
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),alpha=0.7) +
labs(x="Longitude",y="Latitude")+
theme_classic()
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),alpha=0.7) +
labs(x="Longitude",y="Latitude")+
theme_classic()
runApp()
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),alpha=0.7) +
geom_text(aes(group,lat,long))
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),alpha=0.7) +
geom_text(aes(label=group,lat,long))
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),alpha=0.7) +
geom_text(aes(label=group,x=lat,y=long))
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),alpha=0.7) +
geom_text(aes(label=group,x=long,y=lat))
label<-mapdata %>% group_by(state) %>% summarise(y=mean(lat),x=mean(long))
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),alpha=0.7) +
geom_text(data=label, aes(label=group,x=x,y=y))
map_usa
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),alpha=0.7) +
# geom_text(data=label, aes(label=group,x=x,y=y))
labs(x="Longitude",y="Latitude")+
theme_classic()
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),alpha=0.7) +
geom_text(data=label, aes(label=group,x=x,y=y))
labs(x="Longitude",y="Latitude")
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),alpha=0.7) +
geom_text(data=label, aes(label=group,x=x,y=y))
ggplot() +
# background map
geom_polygon(data=map_usa, aes(x = long, y = lat, group = group),alpha=0.7) +
geom_text(data=label, aes(label=group,x=x,y=y))
